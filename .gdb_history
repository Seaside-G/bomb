b phase_2
b phase_3
r
b explode_bomb
c
layout regs
layout regs
layout asm
layout regs
x/s 0x4025cf
x/16x 0x402470
c
c
q
q
r ans.txt
r
q
b phase_4
r ans.txt
q
b phase_3
r ans.txt
b explode_bomb
fsdfds
c
layout asm
q
b phase_4
r
layout regs
c
c
c
c
c
c
c
b phase_3
r ans.txt
r
layout regs
layout asm
layout regs
q
r ans.txt
q
b phase_3
r ans.txt
b explode_bomb
layout asm
layout regs
i register
layout next
layout prev
q
b phase_3
b explode_bomb
r ans.txt
layout regs
c
c
q
b phase_3
b explode_bomb
layout regs
r ans.txt
layout regs
layout asm
layout regs
c
q
b phase_3
b explode_bomb
r ans.txt
layout regs
layout asm
p $rax
stepi
finish
finish
q
b phase_3
b explode_bomb
r ans.txt
layout rsm
layout asm
stepi
finish
q
b phase_3
b explode_bomb
r ans.txt
layout asm
stepi
finish
i $eax
p $eax
stepi
p *(int*)($rsp+0x8)
stepi
p $rax
stepi
q
b phase_3
b explode_bomb
r ans.txt
layout asm
stepi
finish
q
b phase_3
b explode_bomb
r ans.txt
layout asm
stepi
finish
q
bomb
q
b phase_3
b explode_bomb
r ans.txt
layout asm
stepi
finish
p $eax
stepi
p *(int*)(0x402470+8)
q
b phase_4
b explode_bomb
r ans.txt
layout asm
q
b phase_3
r ans.txt
b explode_bomb
layout regs
c
c
r
layout asm
stepi
q
q
b main
r
layout asm
stepi
q
b main
r
layout asm
stepi
p $eax
p *(int*)($rbp-0x4)
q
b main
r
layout asm
stepi
q
b main
r
layout ams
layout asm
stepi
p *(int*)($rbp-0x4)
stepi
q
b main
r
layout asm
stepi
q
b main
r
layout asm
stepi
p $sf
p $zf
p $eflags
p/t $eflags
q
b main
r
layout asm
stepi
1
q
b phase_4
b explode_bomb
r ans.txt
layout asm
q
q
b func4
b explode_bomb
r ans.txt
layout asm
stepi
p $esi
p $eax
stepi
p $esi
p $ecx
p $eax
stepi
p $ecx
stepi
p $ecx
p $eax
stepi
p $ecx
p $eax
q
b main
r
layout gdb
layout asm
stepi
q
b main
r
layout asm
stepi
p $eax
q
b main
r
layout asm
stepi
q
b phase_4
b explode_bomb
r ans.txt
b func4
c
layout asm
q
b phase_5
b explode_bomb
r ans.txt
v
v
v
c
c
c
c
cc
c
c
ccq
q
